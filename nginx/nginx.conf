worker_processes auto;

events { worker_connections 1024; }

http {
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;
    limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
    limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    # Enable gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name _;

        # Frontend (Next.js)
        location /_next/ {
            proxy_pass http://frontend:3000;
        }
        location /static/ {
            alias /srv/static/;
            access_log off;
            expires 30d;
            add_header Cache-Control "public, immutable";
            add_header X-Content-Type-Options "nosniff" always;
        }
        # Auth endpoints - strict rate limiting
        location /api/auth/ {
            limit_req zone=auth burst=5 nodelay;
            limit_conn conn_limit_per_ip 5;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            
            # Security Headers
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://accounts.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.google.com https://www.googleapis.com; frame-src https://accounts.google.com;" always;
            
            # CORS - Whitelist specific origins (replace with your actual domains)
            set $cors_origin "";
            if ($http_origin = "http://localhost:3000") { set $cors_origin $http_origin; }
            if ($http_origin = "http://localhost:3001") { set $cors_origin $http_origin; }
            if ($http_origin = "http://127.0.0.1:3000") { set $cors_origin $http_origin; }
            if ($http_origin = "http://127.0.0.1:3001") { set $cors_origin $http_origin; }
            # Add production domains here:
            # if ($http_origin = "https://yourdomain.com") { set $cors_origin $http_origin; }
            # if ($http_origin = "https://www.yourdomain.com") { set $cors_origin $http_origin; }
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-CSRFToken, X-Requested-With' always;
            add_header Access-Control-Max-Age 86400 always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://backend:8000;
        }
        
        # Allauth headless API -> Django
        location /_allauth/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 30s;
            proxy_connect_timeout 5s;
            proxy_send_timeout 15s;
            
            # CORS - Whitelist specific origins
            set $cors_origin "";
            if ($http_origin = "http://localhost:3000") { set $cors_origin $http_origin; }
            if ($http_origin = "http://localhost") { set $cors_origin $http_origin; }
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-CSRFToken, X-Requested-With' always;
            add_header Access-Control-Max-Age 86400 always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://backend:8000;
        }

        # API -> Django
        location /api/ {
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_conn conn_limit_per_ip 10;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security Headers
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://accounts.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.google.com https://www.googleapis.com; frame-src https://accounts.google.com;" always;
            
            # CORS - Whitelist specific origins (replace with your actual domains)
            set $cors_origin "";
            if ($http_origin = "http://localhost:3001") { set $cors_origin $http_origin; }
            if ($http_origin = "http://127.0.0.1:3001") { set $cors_origin $http_origin; }
            # Add production domains here:
            # if ($http_origin = "https://yourdomain.com") { set $cors_origin $http_origin; }
            # if ($http_origin = "https://www.yourdomain.com") { set $cors_origin $http_origin; }
            
            proxy_hide_header Access-Control-Allow-Origin;
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Access-Control-Allow-Credentials true always;
            add_header Access-Control-Allow-Methods 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header Access-Control-Allow-Headers 'Authorization, Content-Type, X-CSRFToken, X-Requested-With' always;
            add_header Access-Control-Max-Age 86400 always;
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
            proxy_pass http://backend:8000;
        }
        location /start_job {
            proxy_pass http://backend:8000;
        }
        location /job_status/ {
            proxy_pass http://backend:8000;
        }
        # App routes -> Next.js
        location / {
            # General rate limiting
            limit_req zone=general burst=50 nodelay;
            limit_conn conn_limit_per_ip 20;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security Headers for frontend
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://accounts.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.google.com https://www.googleapis.com; frame-src https://accounts.google.com;" always;
            
            proxy_pass http://frontend:3000;
        }
    }
}



