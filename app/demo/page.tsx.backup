'use client'

import { useState, useEffect } from 'react'
import Link from 'next/link'
import emailjs from '@emailjs/browser'

interface DemoRequest {
  company: string
  position: string
  email: string
  phone: string
}

export default function DemoRequest() {
  const [isScrolled, setIsScrolled] = useState(false)
  const [loading, setLoading] = useState(false)
  const [submitted, setSubmitted] = useState(false)
  const [error, setError] = useState<string | null>(null)
  const [formData, setFormData] = useState<DemoRequest>({
    company: '',
    position: '',
    email: '',
    phone: ''
  })

  useEffect(() => {
    const handleScroll = () => {
      const scrollTop = window.scrollY
      setIsScrolled(scrollTop > 10)
    }
    window.addEventListener('scroll', handleScroll)
    
    // EmailJS 초기화 - 실제 사용 시 본인의 Public Key로 교체하세요
    emailjs.init("YOUR_PUBLIC_KEY_HERE")
    
    return () => window.removeEventListener('scroll', handleScroll)
  }, [])

  const handleInputChange = (field: keyof DemoRequest, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError(null)

    // Validate form
    if (!formData.company.trim() || !formData.position.trim() || !formData.email.trim() || !formData.phone.trim()) {
      setError('Please fill in all fields.')
      setLoading(false)
      return
    }

    // Email validation
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    if (!emailRegex.test(formData.email)) {
      setError('Please enter a valid email address.')
      setLoading(false)
      return
    }

    try {
      // EmailJS로 이메일 전송
      const templateParams = {
        to_name: 'Kilexep Team',
        from_name: `${formData.company} - ${formData.position}`,
        company: formData.company,
        position: formData.position,
        email: formData.email,
        phone: formData.phone,
        message: `New demo request from ${formData.company}:
        
Company: ${formData.company}
Position: ${formData.position}
Email: ${formData.email}
Phone: ${formData.phone}

Please contact them to schedule a demo.`
      }

      await emailjs.send(
        'YOUR_SERVICE_ID_HERE',     // 실제 사용 시 EmailJS Service ID로 교체
        'YOUR_TEMPLATE_ID_HERE',    // 실제 사용 시 EmailJS Template ID로 교체
        templateParams
      )
      
      setSubmitted(true)
      console.log('Demo request sent successfully:', formData)
    } catch (error) {
      console.error('EmailJS Error:', error)
      setError('Failed to submit demo request. Please try again.')
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen relative overflow-hidden bg-gradient-to-br from-black via-orange-600 to-black">
      {/* Main gradient background */}
      <div className="absolute inset-0">
        <div className="absolute inset-0 bg-gradient-to-br from-black via-orange-600 to-black">
          <div className="absolute inset-0 bg-gradient-to-br from-white/5 via-transparent to-transparent opacity-20"></div>
          <div className="absolute inset-0 overflow-hidden">
            {/* Floating geometric shapes */}
            <div className="absolute top-20 left-20 w-24 h-24 bg-white/20 rounded-lg transform rotate-45" style={{
              animation: 'pulse 2s infinite'
            }}></div>
            <div className="absolute top-40 right-32 w-20 h-20 bg-white/15 rounded-full" style={{
              animation: 'bounce 2s infinite 1s'
            }}></div>
            <div className="absolute top-1/3 left-1/3 w-28 h-28 bg-white/25 transform rotate-12" style={{
              animation: 'pulse 3s infinite 2s'
            }}></div>
            <div className="absolute top-1/4 right-1/4 w-32 h-32 bg-white/18 rounded-lg transform -rotate-30" style={{
              animation: 'pulse 2.5s infinite 0.5s'
            }}></div>
            <div className="absolute bottom-1/3 right-1/4 w-20 h-20 bg-white/22 rounded-full" style={{
              animation: 'bounce 3s infinite 1.5s'
            }}></div>
          </div>
        </div>
        
        <div className="absolute inset-0" style={{
          background: 'white',
          clipPath: 'polygon(0 80%, 100% 20%, 100% 100%, 0 100%)'
        }}></div>
      </div>

      {/* Navigation Logo */}
      <nav className="fixed top-0 left-0 right-0 z-[60] bg-transparent">
        <div className="pl-4 pr-6 py-4 flex items-center">
          <div className="flex items-center ml-4 w-48">
            <Link href="/" className="flex items-center space-x-0 hover:opacity-80 transition-opacity duration-200">
              <div className="rounded-lg bg-transparent p-1.5">
                <img 
                  src="/logo.svg" 
                  alt="Kilexep Logo" 
                  width="45" 
                  height="45" 
                  className="filter brightness-0 invert"
                />
              </div>
              <span className="text-3xl font-bold italic text-white">
                Kilexep
              </span>
            </Link>
          </div>
        </div>
      </nav>

      {/* Main Content */}
      <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8 pt-32 relative z-10">
        {submitted ? (
          <div className="rounded-xl border border-white/10 bg-white/5 p-12 text-center text-white">
            <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-green-500 to-emerald-600 rounded-full mb-6 shadow-xl">
              <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M5 13l4 4L19 7" />
              </svg>
            </div>
            <h1 className="text-4xl font-bold text-white mb-4">Request Submitted!</h1>
            <p className="text-gray-300 text-xl mb-8">
              Thank you for your interest in Kilexep. We'll be in touch soon with demo access details.
            </p>
            <Link 
              href="/" 
              className="inline-flex items-center justify-center bg-gradient-to-r from-orange-500 to-orange-600 text-white py-3 px-6 rounded-xl font-semibold text-lg hover:from-orange-600 hover:to-orange-700 transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105"
            >
              Back to Home
            </Link>
          </div>
        ) : (
          <div className="rounded-xl border border-gray-200 bg-white p-12 shadow-2xl">
            <div className="text-center mb-10">
              <div className="inline-flex items-center justify-center w-20 h-20 bg-gradient-to-br from-orange-500 to-orange-600 rounded-full mb-6 shadow-xl">
                <svg className="w-10 h-10 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9.663 17h4.673M12 3v1m6.364 1.636l-.707.707M21 12h-1M4 12H3m3.343-5.657l-.707-.707m2.828 9.9a5 5 0 117.072 0l-.548.547A3.374 3.374 0 0014 18.469V19a2 2 0 11-4 0v-.531c0-.895-.356-1.754-.988-2.386l-.548-.547z" />
                </svg>
              </div>
              <h1 className="text-4xl font-bold text-gray-900 mb-4">Request Demo Access</h1>
              <p className="text-gray-600 text-xl max-w-2xl mx-auto">
                Get early access to Kilexep's powerful content automation platform. Fill out the form below and we'll contact you with demo details.
              </p>
            </div>

            {error && (
              <div className="mb-8 rounded-xl border border-red-200 bg-red-50 p-6">
                <div className="flex items-center">
                  <div className="flex-shrink-0">
                    <div className="w-8 h-8 bg-red-100 rounded-full flex items-center justify-center">
                      <svg className="h-5 w-5 text-red-500" viewBox="0 0 20 20" fill="currentColor">
                        <path fillRule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clipRule="evenodd" />
                      </svg>
                    </div>
                  </div>
                  <div className="ml-4">
                    <p className="text-red-700 font-semibold">{error}</p>
                  </div>
                </div>
              </div>
            )}
              
            <form onSubmit={handleSubmit} className="space-y-8">
              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div>
                  <label className="block text-lg font-semibold text-gray-700 mb-4">
                    Company Name
                  </label>
                  <input
                    type="text"
                    value={formData.company}
                    onChange={(e) => handleInputChange('company', e.target.value)}
                    placeholder="Enter your company name"
                    className="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-orange-500/20 focus:border-orange-500 text-gray-700 placeholder-gray-400 text-lg shadow-lg backdrop-blur-sm bg-white/80"
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-lg font-semibold text-gray-700 mb-4">
                    Job Position
                  </label>
                  <input
                    type="text"
                    value={formData.position}
                    onChange={(e) => handleInputChange('position', e.target.value)}
                    placeholder="Enter your job title"
                    className="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-orange-500/20 focus:border-orange-500 text-gray-700 placeholder-gray-400 text-lg shadow-lg backdrop-blur-sm bg-white/80"
                    required
                  />
                </div>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
                <div>
                  <label className="block text-lg font-semibold text-gray-700 mb-4">
                    Email Address
                  </label>
                  <input
                    type="email"
                    value={formData.email}
                    onChange={(e) => handleInputChange('email', e.target.value)}
                    placeholder="Enter your email address"
                    className="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-orange-500/20 focus:border-orange-500 text-gray-700 placeholder-gray-400 text-lg shadow-lg backdrop-blur-sm bg-white/80"
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-lg font-semibold text-gray-700 mb-4">
                    Phone Number
                  </label>
                  <input
                    type="tel"
                    value={formData.phone}
                    onChange={(e) => handleInputChange('phone', e.target.value)}
                    placeholder="Enter your phone number"
                    className="w-full px-6 py-4 border-2 border-gray-200 rounded-2xl focus:ring-4 focus:ring-orange-500/20 focus:border-orange-500 text-gray-700 placeholder-gray-400 text-lg shadow-lg backdrop-blur-sm bg-white/80"
                    required
                  />
                </div>
              </div>
                
              <button
                type="submit"
                disabled={loading}
                className="w-full bg-gradient-to-r from-orange-500 to-orange-600 text-white py-6 px-8 rounded-xl font-bold text-xl hover:from-orange-600 hover:to-orange-700 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-300 shadow-lg hover:shadow-xl transform hover:scale-105 disabled:hover:scale-100"
              >
                {loading ? (
                  <div className="flex items-center justify-center">
                    <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-white mr-3"></div>
                    Submitting Request...
                  </div>
                ) : 'Request Demo Access'}
              </button>
            </form>

            <div className="text-center mt-8">
              <p className="text-gray-500 text-sm">
                We'll contact you within 24 hours to schedule your personalized demo.
              </p>
            </div>
          </div>
        )}
      </div>
    </div>
  )
} 